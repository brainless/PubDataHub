name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    name: GoReleaser Build and Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Install goreleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        install-only: true
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
        
  # Publish to package managers (run after goreleaser)
  publish-packages:
    name: Publish to Package Managers
    runs-on: ubuntu-latest
    needs: goreleaser
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get release info
      id: release_info
      run: |
        TAG=${GITHUB_REF#refs/tags/}
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "version=${TAG#v}" >> $GITHUB_OUTPUT
        
    - name: Publish to Snapcraft
      uses: snapcore/action-publish@v1
      if: success()
      env:
        SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_TOKEN }}
      with:
        snap: pubdatahub_${{ steps.release_info.outputs.version }}_amd64.snap
        release: stable
        
    - name: Notify package managers
      if: success()
      run: |
        echo "📦 Chocolatey package will be auto-updated via GitHub release"
        echo "🍺 Homebrew tap will be auto-updated via goreleaser"
        echo "📦 Snap package published to store"
        echo "🐧 DEB/RPM packages available in GitHub release"
        echo "🐳 Docker images published to ghcr.io"

  # Test installation on different platforms
  test-installation:
    name: Test Installation
    runs-on: ${{ matrix.os }}
    needs: goreleaser
    if: startsWith(github.ref, 'refs/tags/v')
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Get release assets
      id: release_assets
      run: |
        TAG=${GITHUB_REF#refs/tags/}
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        
    - name: Test Linux installation
      if: matrix.os == 'ubuntu-latest'
      run: |
        # Test DEB package installation
        wget -q https://github.com/brainless/PubDataHub/releases/download/${{ steps.release_assets.outputs.tag }}/pubdatahub_*_linux_amd64.deb
        sudo dpkg -i pubdatahub_*.deb || true
        sudo apt-get install -f -y
        pubdatahub --version || echo "Installation test completed"
        
    - name: Test Windows installation
      if: matrix.os == 'windows-latest'
      shell: powershell
      run: |
        # Test binary download
        Write-Host "Testing binary download"
        Invoke-WebRequest -Uri "https://github.com/brainless/PubDataHub/releases/download/${{ steps.release_assets.outputs.tag }}/pubdatahub_*_windows_amd64.zip" -OutFile "pubdatahub.zip"
        Expand-Archive -Path "pubdatahub.zip" -DestinationPath "."
        .\pubdatahub.exe --version
        
    - name: Test macOS installation
      if: matrix.os == 'macos-latest'
      run: |
        # Test binary download
        echo "Testing binary download"
        wget -q https://github.com/brainless/PubDataHub/releases/download/${{ steps.release_assets.outputs.tag }}/pubdatahub_*_darwin_amd64.tar.gz
        tar -xzf pubdatahub_*.tar.gz
        ./pubdatahub --version