// Code generated by tygo. DO NOT EDIT.

//////////
// source: api.go

/**
 * HomeResponse represents the response for the /api/home endpoint
 */
export interface HomeResponse {
  homePath: string;
}
/**
 * ErrorResponse represents an error response
 */
export interface ErrorResponse {
  error: string;
  message: string;
}

//////////
// source: config.go

/**
 * AppConfig represents the complete application configuration
 */
export interface AppConfig {
  storage: StorageConfig;
  downloads: DownloadConfig;
  general: GeneralConfig;
  lastUpdated: string;
}
/**
 * StorageConfig represents storage-related configuration
 */
export interface StorageConfig {
  defaultPath: string;
  maxStoragePerDataset: number /* int */; // in GB
  totalStorageLimit: number /* int */; // in GB
  autoDeleteAfterDays: number /* int */;
  enableCompression: boolean;
}
/**
 * DownloadConfig represents download-related configuration
 */
export interface DownloadConfig {
  maxConcurrentDownloads: number /* int */;
  enableDownloadResume: boolean;
  retryAttempts: number /* int */;
  timeoutSeconds: number /* int */;
}
/**
 * GeneralConfig represents general application configuration
 */
export interface GeneralConfig {
  theme: string; // "light", "dark", "system"
  language: string; // "en", "es", "fr", etc.
  logLevel: string; // "debug", "info", "warn", "error"
  enableTelemetry: boolean;
}
/**
 * ConfigRequest represents a configuration update request
 */
export interface ConfigRequest {
  storage?: StorageConfig;
  downloads?: DownloadConfig;
  general?: GeneralConfig;
}
/**
 * ConfigResponse represents the configuration API responses
 */
export interface ConfigResponse {
  config: AppConfig;
  message?: string;
}
/**
 * StorageStats represents storage usage statistics
 */
export interface StorageStats {
  usedSpace: string;
  freeSpace: string;
  totalSpace: string;
  numberOfDatasets: number /* int */;
  oldestDownload?: string;
}
/**
 * PathValidationRequest represents a path validation request
 */
export interface PathValidationRequest {
  path: string;
}
/**
 * PathValidationResponse represents a path validation response
 */
export interface PathValidationResponse {
  isValid: boolean;
  exists: boolean;
  isWritable: boolean;
  isDirectory: boolean;
  size?: string;
  freeSpace?: string;
  issues: string[];
  warnings: string[];
}
/**
 * ConfigValidationError represents configuration validation errors
 */
export interface ConfigValidationError {
  field: string;
  message: string;
  code: string;
}
/**
 * ConfigValidationResponse represents validation response
 */
export interface ConfigValidationResponse {
  isValid: boolean;
  errors?: ConfigValidationError[];
}
